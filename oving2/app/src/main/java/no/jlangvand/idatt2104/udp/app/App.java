/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package no.jlangvand.idatt2104.udp.app;

import no.jlangvand.idatt2104.udp.list.LinkedList;
import no.jlangvand.idatt2104.udp.utilities.MathExpressionParser;

import static no.jlangvand.idatt2104.udp.utilities.StringUtils.join;
import static no.jlangvand.idatt2104.udp.utilities.StringUtils.split;
import static no.jlangvand.idatt2104.udp.utilities.MathExpressionParser.parse;

import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.SocketException;

import static no.jlangvand.idatt2104.udp.app.MessageUtils.getMessage;

import org.apache.commons.text.WordUtils;

public class App {
    public static void main(String[] args) {
        out.println("Starting server");
        new App().udpListener();
    }

    DatagramPacket packet;
    private static final PrintStream out = System.out;
    int packetLength = 128;
    byte[] buf;
    String request;
    String response;

    /*
     * Open a UDP socket and wait for incoming packets.
     *
     * Upon receiving a packet, parse the contents and return the result.    
     */
    public void udpListener() {
        try (DatagramSocket socket = new DatagramSocket(2021)) {
            for (;;) {
                buf = new byte[packetLength];
                packet = new DatagramPacket(buf, buf.length);
                socket.receive(packet);
                out.println(new String(buf, 0, packetLength));
                request = new String(buf, 0, buf.length);
                response = MathExpressionParser.parse(request);
                packet.setData(response.getBytes());
                socket.send(packet);
            }
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
